load('Train_All_Data_SageLBP.mat');
tr_LBP=Train_All_Data_SageLBP;
a=[ones(1,1008),zeros(1,1008)];
b=[zeros(1,1008),ones(1,1008)];
trl_LBP=[a;b];
hiddenSize1 =400;
autoenc1 = trainAutoencoder(tr_LBP,hiddenSize1, ...
    'MaxEpochs',100, ...
    'L2WeightRegularization',0.004, ...
    'SparsityRegularization',2, ...
    'SparsityProportion',0.4, ...
    'ScaleData', false);
plotWeights(autoenc1);
feat1 = encode(autoenc1,tr_LBP);
hiddenSize2 = 100;
autoenc2 = trainAutoencoder(feat1,hiddenSize2, ...
    'MaxEpochs',100, ...
    'L2WeightRegularization',0.004, ...
    'SparsityRegularization',2, ...
    'SparsityProportion',0.4, ...
    'ScaleData', false);
plotWeights(autoenc2);
feat2 = encode(autoenc2,feat1);

softnet = trainSoftmaxLayer(feat2,trl_LBP,'MaxEpochs',100);
deepnet = stack(autoenc1,autoenc2,softnet);
deepnet = train(deepnet,tr_LBP,trl_LBP);

y=deepnet(tr_LBP);
ezroc3(y,trl_LBP,2,'',1);